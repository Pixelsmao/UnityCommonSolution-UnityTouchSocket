<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TouchSocket.WebApi</name>
    </assembly>
    <members>
        <member name="T:TouchSocket.WebApi.EnableCorsAttribute">
            <summary>
            适用于WebApi的跨域特性
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.EnableCorsAttribute.#ctor(System.String)">
            <summary>
            适用于WebApi的跨域特性
            </summary>
            <param name="policyName">跨域策略名称</param>
        </member>
        <member name="P:TouchSocket.WebApi.EnableCorsAttribute.PolicyName">
            <summary>
            跨域策略名称
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.EnableCorsAttribute.ExecutedAsync(TouchSocket.Rpc.ICallContext,System.Object[],TouchSocket.Rpc.InvokeResult,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="T:TouchSocket.WebApi.FromBodyAttribute">
            <summary>
            指示参数的值应从 HTTP 请求正文中绑定。
            </summary>
        </member>
        <member name="T:TouchSocket.WebApi.FromFormAttribute">
            <summary>
            指定参数应使用请求中的表单数据进行绑定。
            </summary>
        </member>
        <member name="T:TouchSocket.WebApi.FromHeaderAttribute">
            <summary>
            指定参数应使用请求头绑定。
            </summary>
        </member>
        <member name="T:TouchSocket.WebApi.FromQueryAttribute">
            <summary>
            指定参数从查询字符串中获取。
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.RegexRouterAttribute.RegexTemple">
            <summary>
            路由模板。
            </summary>
        </member>
        <member name="T:TouchSocket.WebApi.RouterAttribute">
            <summary>
            表示WebApi路由。
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.RouterAttribute.#ctor(System.String)">
            <summary>
            表示WebApi路由。
            该模板在用于方法时，会覆盖类的使用。
            模板必须由“/”开始，如果没有设置，会自动补齐。
            模板不支持参数约定，仅支持方法路由。
            <para>模板有以下约定：
            <list type="number">
            <item>不区分大小写</item>
            <item>以“[Api]”表示当前类名，如果不包含此字段，则意味着会使用绝对设置</item>
            <item>以“[Action]”表示当前方法名，如果不包含此字段，则意味着会使用绝对设置</item>
            </list>
            </para>
            </summary>
            <param name="routeTemple"></param>
        </member>
        <member name="P:TouchSocket.WebApi.RouterAttribute.RouteTemple">
            <summary>
            路由模板。
            </summary>
        </member>
        <member name="T:TouchSocket.WebApi.WebApiAttribute">
            <summary>
            该自定义属性用于标记 Web API 方法。
            继承自 <see cref="T:TouchSocket.Rpc.RpcAttribute"/>，用于实现远程过程调用的功能。
            通过该属性，可以更便捷地将方法暴露为 Web API 服务。
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiAttribute.#ctor(TouchSocket.WebApi.HttpMethodType)">
            <summary>
            构造函数，用于初始化WebApiAttribute对象并设置HTTP方法类型。
            </summary>
            <param name="method">指定HTTP请求的方法类型，如GET、POST等。</param>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiAttribute.#ctor">
            <summary>
            使用Get函数的WebApi特性
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiAttribute.Method">
            <summary>
            请求函数类型。
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiAttribute.GetGenericConstraintTypes">
            <inheritdoc/>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiAttribute.GetExtensionInstanceMethod(TouchSocket.Rpc.RpcMethod,System.Collections.Generic.List{System.String},TouchSocket.Rpc.RpcParameter[],System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiAttribute.GetInstanceMethod(TouchSocket.Rpc.RpcMethod,System.Collections.Generic.List{System.String},TouchSocket.Rpc.RpcParameter[],System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiAttribute.GetRouteUrls(TouchSocket.Rpc.RpcMethod)">
            <summary>
            获取路由路径。
            <para>路由路径的第一个值会被当做调用值。</para>
            </summary>
            <param name="rpcMethod"></param>
            <returns></returns>
        </member>
        <member name="T:TouchSocket.WebApi.ActionResult">
            <summary>
            结果状态
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.ActionResult.Status">
            <summary>
            状态类型
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.ActionResult.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiCallContext.HttpContext">
            <inheritdoc/>
        </member>
        <member name="T:TouchSocket.WebApi.WebApiRequest">
            <summary>
            表示一个 Web API 请求。
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiRequest.Method">
            <summary>
            获取或设置 HTTP 方法类型。
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiRequest.Body">
            <summary>
            获取或设置请求的主体。
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiRequest.ContentType">
            <summary>
            获取或设置请求的内容类型。
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiRequest.Headers">
            <summary>
            获取或设置请求的头部信息。
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiRequest.Querys">
            <summary>
            获取或设置请求的查询参数。
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiRequest.Forms">
            <summary>
            获取或设置请求的表单数据。
            </summary>
        </member>
        <member name="T:TouchSocket.WebApi.WebApiClient">
            <summary>
            WebApi客户端
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiClient.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiClient.Converter">
            <summary>
            字符串转化器
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiClient.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiClient.InvokeAsync(System.String,System.Type,TouchSocket.Rpc.IInvokeOption,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:TouchSocket.WebApi.WebApiClientSlim">
            <summary>
            使用<see cref="T:System.Net.Http.HttpClient"/>为基础的WebApi客户端。
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiClientSlim.#ctor(System.Net.Http.HttpClient)">
            <summary>
            使用<see cref="T:System.Net.Http.HttpClient"/>为基础的WebApi客户端。
            </summary>
            <param name="httpClient"></param>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiClientSlim.Converter">
            <summary>
            字符串转化器
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiClientSlim.InvokeAsync(System.String,System.Type,TouchSocket.Rpc.IInvokeOption,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:TouchSocket.WebApi.HttpMethodType">
            <summary>
            请求函数类型
            </summary>
        </member>
        <member name="F:TouchSocket.WebApi.HttpMethodType.Get">
            <summary>
            以GET方式。支持调用上下文。
            <para>以该方式时，所有的参数类型必须是基础类型。所有的参数来源均来自url参数。</para>
            </summary>
        </member>
        <member name="F:TouchSocket.WebApi.HttpMethodType.GET">
            <summary>
            以GET方式。支持调用上下文。
            <para>以该方式时，所有的参数类型必须是基础类型。所有的参数来源均来自url参数。</para>
            </summary>
        </member>
        <member name="F:TouchSocket.WebApi.HttpMethodType.Post">
            <summary>
            以Post方式。支持调用上下文。
            <para>以该方式时，可以应对以下情况：</para>
            <list type="bullet">
            <item>仅有一个参数时，该参数可以为任意类型，且参数来源为Body</item>
            <item>当有多个参数时，最后一个参数可以为任意类型，且参数来源为Body，其余参数均必须是基础类型，且来自url参数。</item>
            </list>
            </summary>
        </member>
        <member name="F:TouchSocket.WebApi.HttpMethodType.POST">
            <summary>
            以Post方式。支持调用上下文。
            <para>以该方式时，可以应对以下情况：</para>
            <list type="bullet">
            <item>仅有一个参数时，该参数可以为任意类型，且参数来源为Body</item>
            <item>当有多个参数时，最后一个参数可以为任意类型，且参数来源为Body，其余参数均必须是基础类型，且来自url参数。</item>
            </list>
            </summary>
        </member>
        <member name="F:TouchSocket.WebApi.HttpMethodType.Put">
            <summary>
            以Put方式。支持调用上下文。
            </summary>
        </member>
        <member name="F:TouchSocket.WebApi.HttpMethodType.Delete">
            <summary>
            以Delete方式。支持调用上下文。
            </summary>
        </member>
        <member name="T:TouchSocket.WebApi.WebApiEventArgs">
            <summary>
            提供Web API事件参数的类
            </summary>
            <summary>
            WebAPI事件参数类，用于封装HTTP请求和响应信息
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiEventArgs.#ctor(TouchSocket.Http.HttpRequest,TouchSocket.Http.HttpResponse)">
            <summary>
            初始化WebApiEventArgs类的新实例
            </summary>
            <param name="request">表示HTTP请求的对象</param>
            <param name="response">表示HTTP响应的对象</param>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiEventArgs.IsHttpMessage">
            <summary>
            获取或设置一个值，该值指示是否以HttpMessage方式请求
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiEventArgs.Request">
            <summary>
            获取HTTP请求对象
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiEventArgs.Response">
            <summary>
            获取HTTP响应对象
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiEventArgs.RequestMessage">
            <summary>
            Http请求
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiEventArgs.#ctor(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)">
            <summary>
            WebApiEventArgs
            </summary>
            <param name="requestMessage">HTTP请求消息</param>
            <param name="responseMessage">HTTP响应消息</param>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiEventArgs.ResponseMessage">
            <summary>
            Http响应
            </summary>
        </member>
        <member name="T:TouchSocket.WebApi.IHttpCallContext">
            <summary>
            IHttpCallContext
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.IHttpCallContext.HttpContext">
            <summary>
            Http上下文
            </summary>
        </member>
        <member name="T:TouchSocket.WebApi.IWebApiCallContext">
            <summary>
            定义了一个用于Web API调用上下文的接口，继承自IHttpCallContext。
            </summary>
            <remarks>
            此接口旨在为Web API调用提供特定的上下文信息，以便在这样的调用中传递和处理额外的数据。
            实现这个接口的类应该提供特定于Web API环境的方法和属性。
            </remarks>
        </member>
        <member name="T:TouchSocket.WebApi.IWebApiClient">
            <summary>
            定义了一个用于Web API客户端操作的公共接口，该接口继承自多个基接口，以支持丰富的网络和会话功能
            </summary>
            <remarks>
            此接口结合了IWebApiClientBase, IHttpSession, ISetupConfigObject, IOnlineClient和ITcpConnectableClient的功能，
            提供了一种综合的方法来实现Web API的客户端操作。实现这个接口的类将能够发起Web API请求，
            管理会话状态，配置客户端设置，处理在线状态，并支持TCP连接管理。
            </remarks>
        </member>
        <member name="T:TouchSocket.WebApi.IWebApiClientBase">
            <summary>
            定义了一个基础的Web API客户端接口，该接口扩展了IRpcClient。
            </summary>
            <remarks>
            此接口的目的是为Web API客户端提供一个统一的接口定义，任何实现该接口的类都继承了RPC客户端的基本功能，
            并且可能提供了Web API特定的功能和方法。
            </remarks>
        </member>
        <member name="T:TouchSocket.WebApi.IWebApiMapping">
            <summary>
            Web API 映射接口。
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.IWebApiMapping.MakeReadonly">
            <summary>
            将映射设置为只读。
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.IWebApiMapping.Match(System.String,TouchSocket.Http.HttpMethod)">
            <summary>
            根据指定的 URL 和 HTTP 方法匹配 RPC 方法。
            </summary>
            <param name="url">要匹配的 URL。</param>
            <param name="httpMethod">要匹配的 HTTP 方法。</param>
            <returns>匹配的 RPC 方法。</returns>
        </member>
        <member name="T:TouchSocket.WebApi.MappingMethod">
            <summary>
            表示Web API的映射方法。
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.MappingMethod.#ctor(System.String,TouchSocket.Http.HttpMethod,TouchSocket.Rpc.RpcMethod,System.Boolean)">
            <summary>
            初始化<see cref="T:TouchSocket.WebApi.MappingMethod"/>结构的新实例。
            </summary>
            <param name="url">映射方法的URL。</param>
            <param name="httpMethod">映射方法的HTTP方法。</param>
            <param name="rpcMethod">映射方法的RPC方法。</param>
            <param name="isRegex">指示URL是否为正则表达式。</param>
        </member>
        <member name="P:TouchSocket.WebApi.MappingMethod.Url">
            <summary>
            获取映射方法的URL。
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.MappingMethod.HttpMethod">
            <summary>
            获取映射方法的HTTP方法。
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.MappingMethod.RpcMethod">
            <summary>
            获取映射方法的RPC方法。
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.MappingMethod.IsRegex">
            <summary>
            获取一个值，该值指示URL是否为正则表达式。
            </summary>
        </member>
        <member name="T:TouchSocket.WebApi.IWebApiRequestPlugin">
            <summary>
            定义一个用于处理Web API请求的插件接口
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.IWebApiRequestPlugin.OnWebApiRequest(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)">
            <summary>
            在请求之前
            </summary>
            <param name="client">Web API客户端基类实例，用于发送请求</param>
            <param name="e">包含请求相关信息的事件参数</param>
            <returns>一个任务对象，用于异步操作</returns>
        </member>
        <member name="T:TouchSocket.WebApi.IWebApiResponsePlugin">
            <summary>
            定义一个接口，用于处理Web API响应后的操作
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.IWebApiResponsePlugin.OnWebApiResponse(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)">
            <summary>
            在收到响应之后执行的操作
            此方法允许在Web API客户端收到响应后对其进行自定义处理
            </summary>
            <param name="client">发出请求的Web API客户端实例</param>
            <param name="e">包含响应信息的事件参数</param>
            <returns>一个任务对象，代表异步操作</returns>
        </member>
        <member name="T:TouchSocket.WebApi.WebApiParserPlugin">
            <summary>
            WebApi解析器
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiParserPlugin.#ctor(TouchSocket.Rpc.IRpcServerProvider)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiParserPlugin.Converter">
            <summary>
            转化器
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiParserPlugin.GetRouteMap">
            <summary>
            获取Get函数路由映射图
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiParserPlugin.Mapping">
            <summary>
            获取WebApi映射
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiParserPlugin.PostRouteMap">
            <summary>
            获取Post函数路由映射图
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiParserPlugin.ConfigureConverter(System.Action{TouchSocket.WebApi.WebApiSerializerConverter})">
            <summary>
            配置转换器。可以实现json序列化或者xml序列化。
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiParserPlugin.OnHttpRequest(TouchSocket.Http.IHttpSessionClient,TouchSocket.Http.HttpContextEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiParserPlugin.OnTcpClosed(TouchSocket.Sockets.ITcpSession,TouchSocket.Sockets.ClosedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:TouchSocket.WebApi.WebApiSerializerConverter">
            <summary>
            适用于WebApi的序列化器
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiSerializerConverter.Serialize(TouchSocket.Http.HttpContext,System.Object@)">
            <inheritdoc/>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiSerializerConverter.AddJsonSerializerFormatter(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            添加Json序列化器
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiSerializerConverter.AddXmlSerializerFormatter">
            <summary>
            添加Xml序列化器
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiSerializerConverter.AddSystemTextJsonSerializerFormatter(System.Action{System.Text.Json.JsonSerializerOptions})">
            <summary>
            添加System.Text.Json序列化器
            </summary>
            <param name="options">配置JsonSerializerOptions的操作</param>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiSystemTextJsonSerializerContext.InvokeStatus">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiSystemTextJsonSerializerContext.ActionResult">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiSystemTextJsonSerializerContext.String">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiSystemTextJsonSerializerContext.Default">
            <summary>
            The default <see cref="T:System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance.
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiSystemTextJsonSerializerContext.GeneratedSerializerOptions">
            <summary>
            The source-generated options associated with this context.
            </summary>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiSystemTextJsonSerializerContext.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiSystemTextJsonSerializerContext.#ctor(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:TouchSocket.WebApi.WebApiSystemTextJsonSerializerContext.GetTypeInfo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:TouchSocket.WebApi.WebApiNameAttribute">
            <summary>
            表示 Web API 名称的特性。
            </summary>
        </member>
        <member name="P:TouchSocket.WebApi.WebApiNameAttribute.Name">
            <summary>
            获取或设置 Web API 的名称。
            </summary>
        </member>
        <member name="T:TouchSocket.WebApi._WebApiRequestPluginExtensions">
            <inheritdoc cref = "T:TouchSocket.WebApi.IWebApiRequestPlugin"/>
        </member>
        <member name="M:TouchSocket.WebApi._WebApiRequestPluginExtensions.AddWebApiRequestPlugin(TouchSocket.Core.IPluginManager,System.Func{TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs,System.Threading.Tasks.Task})">
            <inheritdoc cref = "M:TouchSocket.WebApi.IWebApiRequestPlugin.OnWebApiRequest(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)"/>
        </member>
        <member name="M:TouchSocket.WebApi._WebApiRequestPluginExtensions.AddWebApiRequestPlugin(TouchSocket.Core.IPluginManager,System.Action{TouchSocket.WebApi.IWebApiClientBase})">
            <inheritdoc cref = "M:TouchSocket.WebApi.IWebApiRequestPlugin.OnWebApiRequest(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)"/>
        </member>
        <member name="M:TouchSocket.WebApi._WebApiRequestPluginExtensions.AddWebApiRequestPlugin(TouchSocket.Core.IPluginManager,System.Action)">
            <inheritdoc cref = "M:TouchSocket.WebApi.IWebApiRequestPlugin.OnWebApiRequest(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)"/>
        </member>
        <member name="M:TouchSocket.WebApi._WebApiRequestPluginExtensions.AddWebApiRequestPlugin(TouchSocket.Core.IPluginManager,System.Func{TouchSocket.WebApi.WebApiEventArgs,System.Threading.Tasks.Task})">
            <inheritdoc cref = "M:TouchSocket.WebApi.IWebApiRequestPlugin.OnWebApiRequest(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)"/>
        </member>
        <member name="M:TouchSocket.WebApi._WebApiRequestPluginExtensions.AddWebApiRequestPlugin(TouchSocket.Core.IPluginManager,System.Func{TouchSocket.WebApi.IWebApiClientBase,System.Threading.Tasks.Task})">
            <inheritdoc cref = "M:TouchSocket.WebApi.IWebApiRequestPlugin.OnWebApiRequest(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)"/>
        </member>
        <member name="M:TouchSocket.WebApi._WebApiRequestPluginExtensions.AddWebApiRequestPlugin(TouchSocket.Core.IPluginManager,System.Func{System.Threading.Tasks.Task})">
            <inheritdoc cref = "M:TouchSocket.WebApi.IWebApiRequestPlugin.OnWebApiRequest(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)"/>
        </member>
        <member name="T:TouchSocket.WebApi._WebApiResponsePluginExtensions">
            <inheritdoc cref = "T:TouchSocket.WebApi.IWebApiResponsePlugin"/>
        </member>
        <member name="M:TouchSocket.WebApi._WebApiResponsePluginExtensions.AddWebApiResponsePlugin(TouchSocket.Core.IPluginManager,System.Func{TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs,System.Threading.Tasks.Task})">
            <inheritdoc cref = "M:TouchSocket.WebApi.IWebApiResponsePlugin.OnWebApiResponse(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)"/>
        </member>
        <member name="M:TouchSocket.WebApi._WebApiResponsePluginExtensions.AddWebApiResponsePlugin(TouchSocket.Core.IPluginManager,System.Action{TouchSocket.WebApi.IWebApiClientBase})">
            <inheritdoc cref = "M:TouchSocket.WebApi.IWebApiResponsePlugin.OnWebApiResponse(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)"/>
        </member>
        <member name="M:TouchSocket.WebApi._WebApiResponsePluginExtensions.AddWebApiResponsePlugin(TouchSocket.Core.IPluginManager,System.Action)">
            <inheritdoc cref = "M:TouchSocket.WebApi.IWebApiResponsePlugin.OnWebApiResponse(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)"/>
        </member>
        <member name="M:TouchSocket.WebApi._WebApiResponsePluginExtensions.AddWebApiResponsePlugin(TouchSocket.Core.IPluginManager,System.Func{TouchSocket.WebApi.WebApiEventArgs,System.Threading.Tasks.Task})">
            <inheritdoc cref = "M:TouchSocket.WebApi.IWebApiResponsePlugin.OnWebApiResponse(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)"/>
        </member>
        <member name="M:TouchSocket.WebApi._WebApiResponsePluginExtensions.AddWebApiResponsePlugin(TouchSocket.Core.IPluginManager,System.Func{TouchSocket.WebApi.IWebApiClientBase,System.Threading.Tasks.Task})">
            <inheritdoc cref = "M:TouchSocket.WebApi.IWebApiResponsePlugin.OnWebApiResponse(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)"/>
        </member>
        <member name="M:TouchSocket.WebApi._WebApiResponsePluginExtensions.AddWebApiResponsePlugin(TouchSocket.Core.IPluginManager,System.Func{System.Threading.Tasks.Task})">
            <inheritdoc cref = "M:TouchSocket.WebApi.IWebApiResponsePlugin.OnWebApiResponse(TouchSocket.WebApi.IWebApiClientBase,TouchSocket.WebApi.WebApiEventArgs)"/>
        </member>
        <member name="T:TouchSocket.Sockets.WebApiConfigExtensions">
            <summary>
            WebApiConfigExtensions
            </summary>
        </member>
        <member name="T:TouchSocket.Core.WebApiPluginManagerExtension">
            <summary>
            WebApiPluginManagerExtension
            </summary>
        </member>
        <member name="M:TouchSocket.Core.WebApiPluginManagerExtension.UseWebApi(TouchSocket.Core.IPluginManager)">
            <summary>
            使用WebApi的插件。仅服务器可用。
            </summary>
            <param name="pluginManager"></param>
            <returns></returns>
        </member>
        <member name="T:TouchSocket.Core.FastSerializableAttribute">
            <summary>
            标识源生成Fast序列化相关的实现。
            </summary>
        </member>
        <member name="T:TouchSocket.Core.GeneratorPackageAttribute">
            <summary>
            标识源生成<see cref="T:TouchSocket.Core.IPackage"/>的实现。
            </summary>
        </member>
        <member name="T:TouchSocket.Core.PackageMemberAttribute">
            <summary>
            标识源生成<see cref="T:TouchSocket.Core.IPackage"/>成员的特性。
            </summary>
        </member>
        <member name="P:TouchSocket.Core.PackageMemberAttribute.Behavior">
            <summary>
            生成行为。一般来说，对于非只读、非重写、且同时拥有get，set（可以私有）访问器的属性，会自动生成。
            对于字段，均不会自动生成。所以可以使用该设置，来指示生成器的生成行为。
            </summary>
        </member>
        <member name="T:TouchSocket.Resources.TouchSocketWebApiResource">
            <summary>
            TouchSocketWebApi资源枚举
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.ConstantExpectedAttribute">
            <summary>
            Indicates that the specified method parameter expects a constant.
            </summary>
            <remarks>
            This can be used to inform tooling that a constant should be used as an argument for the annotated parameter.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ConstantExpectedAttribute.Min">
            <summary>
            Indicates the minimum bound of the expected constant, inclusive.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ConstantExpectedAttribute.Max">
            <summary>
            Indicates the maximum bound of the expected constant, inclusive.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.ExperimentalAttribute">
            <summary>
            Indicates that an API is experimental and it may change in the future.
            </summary>
            <remarks>
            This attribute allows call sites to be flagged with a diagnostic that indicates that an experimental
            feature is used. Authors can use this attribute to ship preview features in their assemblies.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.ExperimentalAttribute"/> class,
            specifying the ID that the compiler will use when reporting a use of the API the attribute applies to.
            </summary>
            <param name="diagnosticId">The ID that the compiler will use when reporting a use of the API the attribute applies to.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.DiagnosticId">
            <summary>
            Gets the ID that the compiler will use when reporting a use of the API the attribute applies to.
            </summary>
            <value>The unique diagnostic ID.</value>
            <remarks>
            The diagnostic ID is shown in build output for warnings and errors.
            <para>This property represents the unique ID that can be used to suppress the warnings or errors, if needed.</para>
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.ExperimentalAttribute.UrlFormat">
            <summary>
            Gets or sets the URL for corresponding documentation.
            The API accepts a format string instead of an actual URL, creating a generic URL that includes the diagnostic ID.
            </summary>
            <value>The format string that represents a URL to corresponding documentation.</value>
            <remarks>An example format string is <c>https://contoso.com/obsoletion-warnings/{0}</c>.</remarks>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property members have not-null values.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>
            Initializes the attribute with a field or property member.
            </summary>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>
            Initializes the attribute with the list of field and property members.
            </summary>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>
            Specifies that the method or property will ensure that the listed field and property
            members have not-null values when returning with the specified return value condition.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes the attribute with the specified return value condition and a field or property member.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="member">The field or property member that is promised to be not-null.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
            Initializes the attribute with the specified return value condition and list of field and property members.
            </summary>
            <param name="returnValue">The return value condition. If the method returns this value, the associated parameter will not be null.</param>
            <param name="members">The list of field and property members that are promised to be not-null.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>
            Gets the return value condition.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>
            Gets field or property member names.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute">
            <summary>
            Specifies that this constructor sets all required members for the current type,
            and callers do not need to set any required members themselves.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute">
            <summary>
            Specifies the syntax used in a string.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String)">
            <summary>
            Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.
            </summary>
            <param name="syntax">The syntax identifier.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String,System.Object[])">
            <summary>Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
            <param name="syntax">The syntax identifier.</param>
            <param name="arguments">Optional arguments associated with the specific syntax employed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Syntax">
            <summary>Gets the identifier of the syntax used.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Arguments">
            <summary>Optional arguments associated with the specific syntax employed.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.CompositeFormat">
            <summary>The syntax identifier for strings containing composite formats for string formatting.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateOnlyFormat">
            <summary>The syntax identifier for strings containing date format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateTimeFormat">
            <summary>The syntax identifier for strings containing date and time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.EnumFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Enum"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.GuidFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Guid"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Json">
            <summary>The syntax identifier for strings containing JavaScript Object Notation (JSON).</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.NumericFormat">
            <summary>The syntax identifier for strings containing numeric format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Regex">
            <summary>The syntax identifier for strings containing regular expressions.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeOnlyFormat">
            <summary>The syntax identifier for strings containing time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeSpanFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.TimeSpan"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Uri">
            <summary>The syntax identifier for strings containing URIs.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Xml">
            <summary>The syntax identifier for strings containing XML.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnscopedRefAttribute">
            <summary>
            Used to indicate a byref escapes and is not scoped.
            </summary>
            <remarks>
            <para>
            There are several cases where the C# compiler treats a <see langword="ref"/> as implicitly
            <see langword="scoped"/> - where the compiler does not allow the <see langword="ref"/> to escape the method.
            </para>
            <para>
            For example:
            <list type="number">
                <item><see langword="this"/> for <see langword="struct"/> instance methods.</item>
                <item><see langword="ref"/> parameters that refer to <see langword="ref"/> <see langword="struct"/> types.</item>
                <item><see langword="out"/> parameters.</item>
            </list>
            </para>
            <para>
            This attribute is used in those instances where the <see langword="ref"/> should be allowed to escape.
            </para>
            <para>
            Applying this attribute, in any form, has impact on consumers of the applicable API. It is necessary for
            API authors to understand the lifetime implications of applying this attribute and how it may impact their users.
            </para>
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute">
            <summary>
            An attribute that allows parameters to receive the expression of other parameters.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute"/> class.
            </summary>
            <param name="parameterName">The condition parameter value.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CallerArgumentExpressionAttribute.ParameterName">
            <summary>
            Gets the parameter name the expression is retrieved from.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CollectionBuilderAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initialize the attribute to refer to the <paramref name="methodName"/> method on the <paramref name="builderType"/> type.
            </summary>
            <param name="builderType">The type of the builder to use to construct the collection.</param>
            <param name="methodName">The name of the method on the builder to use to construct the collection.</param>
            <remarks>
            <paramref name="methodName"/> must refer to a static method that accepts a single parameter of
            type <see cref="T:System.ReadOnlySpan`1"/> and returns an instance of the collection being built containing
            a copy of the data from that span.  In future releases of .NET, additional patterns may be supported.
            </remarks>
        </member>
        <member name="P:System.Runtime.CompilerServices.CollectionBuilderAttribute.BuilderType">
            <summary>
            Gets the type of the builder to use to construct the collection.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CollectionBuilderAttribute.MethodName">
            <summary>
            Gets the name of the method on the builder to use to construct the collection.
            </summary>
            <remarks>
            This should match the metadata name of the target method.
            For example, this might be ".ctor" if targeting the type's constructor.
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute">
            <summary>
            Indicates that compiler support for a particular feature is required for the location where this attribute is applied.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute"/> type.
            </summary>
            <param name="featureName">The name of the feature to indicate.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName">
            <summary>
            The name of the compiler feature.
            </summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.IsOptional">
            <summary>
            If true, the compiler can choose to allow access to the location where this attribute is applied if it does not understand <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/>.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RefStructs">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the ref structs C# feature.
            </summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.RequiredMembers">
            <summary>
            The <see cref="P:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute.FeatureName"/> used for the required members C# feature.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute">
            <summary>
            Indicates which arguments to a method involving an interpolated string handler should be passed to that handler.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="argument">The name of the argument that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="M:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute"/> class.
            </summary>
            <param name="arguments">The names of the arguments that should be passed to the handler.</param>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="P:System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute.Arguments">
            <summary>
            Gets the names of the arguments that should be passed to the handler.
            </summary>
            <remarks><see langword="null"/> may be used as the name of the receiver in an instance method.</remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute">
            <summary>
            Indicates the attributed type is to be used as an interpolated string handler.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
            Reserved to be used by the compiler for tracking metadata.
            This class should not be used by developers in source code.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ModuleInitializerAttribute">
             <summary>
             Used to indicate to the compiler that a method should be called
             in its containing module's initializer.
             </summary>
             <remarks>
             When one or more valid methods
             with this attribute are found in a compilation, the compiler will
             emit a module initializer which calls each of the attributed methods.
            
             Certain requirements are imposed on any method targeted with this attribute:
             - The method must be `static`.
             - The method must be an ordinary member method, as opposed to a property accessor, constructor, local function, etc.
             - The method must be parameterless.
             - The method must return `void`.
             - The method must not be generic or be contained in a generic type.
             - The method's effective accessibility must be `internal` or `public`.
            
             The specification for module initializers in the .NET runtime can be found here:
             https://github.com/dotnet/runtime/blob/main/docs/design/specs/Ecma-335-Augments.md#module-initializer
             </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute">
            <summary>
            Specifies the priority of a member in overload resolution. When unspecified, the default priority is 0.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute"/> class.
            </summary>
            <param name="priority">The priority of the attributed member. Higher numbers are prioritized, lower numbers are deprioritized. 0 is the default if no attribute is present.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute.Priority">
            <summary>
            The priority of the member.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ParamCollectionAttribute">
            <summary>
            Indicates that a method will allow a variable number of arguments in its invocation.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.RequiredMemberAttribute">
            <summary>
            Specifies that a type has required members or that a member is required.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.RequiresLocationAttribute">
            <summary>
            Reserved for use by a compiler for tracking metadata.
            This attribute should not be used by developers in source code.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.SkipLocalsInitAttribute">
            <summary>
            Used to indicate to the compiler that the <c>.locals init</c> flag should not be set in method headers.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class.
            </summary>
        </member>
        <member name="M:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute"/> class with the specified message.
            </summary>
            <param name="message">An optional message associated with this attribute instance.</param>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Message">
            <summary>
            Returns the optional message associated with this attribute instance.
            </summary>
        </member>
        <member name="P:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute.Url">
            <summary>
            Returns the optional URL associated with this attribute instance.
            </summary>
        </member>
    </members>
</doc>
